{"version":3,"sources":["Components/Header/index.module.scss","Components/PeoplePage/index.module.scss","Components/Profile/index.module.scss","Components/Footer/index.module.scss","App.module.scss","img/lorisLogo.png","Components/Header/index.tsx","Components/Profile/index.tsx","Components/PeoplePage/index.tsx","Components/Footer/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","headerBar","logo","headerText","profileWrapper","icon","socialLinks","footerBar","footerText","appBody","__webpack_require__","p","Header","react_default","a","createElement","className","styles","src","height","alt","Component","Profile","this","props","personName","twitterUrl","renderLink","linkedinUrl","githubUrl","contactEmail","concat","accessibilityName","url","iconName","href","target","rel","PeoplePage","Profile_Profile","Footer","App","Header_Header","PeoplePage_PeoplePage","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.405b7863.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBar\":\"Header_headerBar__KHgFN\",\"logo\":\"Header_logo__2CND8\",\"headerText\":\"Header_headerText__12ozd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileWrapper\":\"PeoplePage_profileWrapper__F2-pF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Profile_icon__29-jJ\",\"socialLinks\":\"Profile_socialLinks__1TBJC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerBar\":\"Footer_footerBar__3cBKo\",\"footerText\":\"Footer_footerText__2XSYF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBody\":\"App_appBody__KILQA\"};","module.exports = __webpack_public_path__ + \"static/media/lorisLogo.46c03615.png\";","import React, { Component } from \"react\";\r\nimport logo from '../../img/lorisLogo.png';\r\nimport styles from './index.module.scss';\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className={styles.headerBar}>\r\n        <img src={logo} height=\"50\" className={styles.logo} alt=\"\" />\r\n        <span className={styles.headerText}>\r\n          Sharp Loris Games\r\n        </span>\r\n      </header>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport styles from './index.module.scss';\r\n\r\ninterface IProfileProps {\r\n  personName: string;\r\n  twitterUrl?: string;\r\n  linkedinUrl?: string;\r\n  githubUrl?: string;\r\n  contactEmail?: string;\r\n}\r\n\r\nexport default class Profile extends Component<IProfileProps, {}> {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3>{this.props.personName}</h3>\r\n          <span className={styles.socialLinks}>\r\n            {this.props.twitterUrl && this.renderLink(\"Twitter\", this.props.twitterUrl, \"mdi mdi-twitter\")}\r\n            {this.props.linkedinUrl && this.renderLink(\"LinkedIn\", this.props.linkedinUrl, \"mdi mdi-linkedin\")}\r\n            {this.props.githubUrl && this.renderLink(\"GitHub\", this.props.githubUrl, \"mdi mdi-github-circle\")}\r\n            {this.props.contactEmail && this.renderLink(\"Email\", `mailto:${this.props.contactEmail}`, \"mdi mdi-email-outline\")}\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    private renderLink(accessibilityName: string, url: string, iconName: string){\r\n      return (\r\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className={`${styles.icon} ${iconName}`}>\r\n          <span className=\"hidden-text\">\r\n            {accessibilityName}\r\n          </span>\r\n        </a>\r\n      );\r\n    }\r\n  }","import React, { Component } from \"react\";\r\nimport Profile from '../Profile';\r\nimport styles from './index.module.scss';\r\n\r\nexport default class PeoplePage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={styles.profileWrapper}>\r\n          <Profile\r\n            personName=\"Daniel Williams\"\r\n            twitterUrl=\"https://twitter.com/DanielW094\"\r\n            linkedinUrl=\"https://www.linkedin.com/in/daniel-williams-4295b8a8\"\r\n            githubUrl=\"https://github.com/DanielW093\"\r\n            contactEmail=\"contact@sharploris.net\"\r\n          />\r\n          <h4>Programmer on <a href=\"https://twitter.com/Oiseaudev\" target=\"_blank\" rel=\"noopener noreferrer\">Oiseau</a></h4>\r\n          <h4>Developer of the Loris Settings Manager editor extension for Unity3D</h4>\r\n          <p>\r\n            <a href=\"https://sharploris.net/LorisSettingsManager\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Find the documentation here\r\n            </a>\r\n            &nbsp;and the&nbsp;\r\n            <a href=\"https://assetstore.unity.com/packages/tools/utilities/loris-settings-manager-139326\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              asset store page here.\r\n            </a>\r\n          </p>\r\n          <h4>Software Engineer at <a href=\"https://www.madetech.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Made Tech</a></h4>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className={styles.profileWrapper}>\r\n          <Profile\r\n            personName=\"Jess Molloy\"\r\n            twitterUrl=\"https://twitter.com/jessabellerina\"\r\n            linkedinUrl=\"https://www.linkedin.com/in/jessmolloyga/\"\r\n            contactEmail=\"jessmolloyga@gmail.com\"\r\n          />\r\n          <h4>Design, accessibility and 3D art on <a href=\"https://twitter.com/Oiseaudev\" target=\"_blank\" rel=\"noopener noreferrer\">Oiseau</a></h4>\r\n          <h4>Developer of <a href=\"https://jessmolloyga.wixsite.com/jessmolloy\" target=\"_blank\" rel=\"noopener noreferrer\">The Green Monster</a> mod for Fallout 4</h4>\r\n          <h4>Games Development (Design) Masters Student at Kingston University</h4>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <div className={styles.profileWrapper}>\r\n          <Profile\r\n            personName=\"Thomas Bassett\"\r\n            githubUrl=\"https://github.com/snoogle13\"\r\n            linkedinUrl=\"https://www.linkedin.com/in/thomas-bassett-b08304112/\"\r\n            contactEmail=\"thomasbassett94@gmail.com\"\r\n          />\r\n          <h4>Computer Science (Games Programming) at Kingston University</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport styles from './index.module.scss';\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className={styles.footerBar}>\r\n        <div className={styles.footerText}>\r\n          Â© Copyright - Sharp Loris Games 2019\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport styles from './App.module.scss';\r\nimport Header from './Components/Header';\r\nimport PeoplePage from './Components/PeoplePage';\r\nimport Footer from './Components/Footer';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className={`${styles.appBody} centered`}>\r\n        <h2>Met us at Develop:Brighton? Reach out!</h2>\r\n        <br />\r\n        <PeoplePage />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}